platform:
- x86
- x64

environment:
  APPVEYOR_RDP_PASSWORD: 7A4hcPlOZ2UhEiUk5cVx
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    - PYTHON_MAJOR: 2
      PYTHON_MINOR: 6
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
    - PYTHON_MAJOR: 2
      PYTHON_MINOR: 7
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_MAJOR: 3
      PYTHON_MINOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_MAJOR: 3
      PYTHON_MINOR: 4
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_MAJOR: 3
      PYTHON_MINOR: 5
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_MAJOR: 3
      PYTHON_MINOR: 6
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

install:
  # Prepare environment
  - set PYTHON_PATH=C:\Python%PYTHON_MAJOR%%PYTHON_MINOR%
  - if "%Platform%"=="x64" set PYTHON_PATH=%PYTHON_PATH%-x64
  - echo %PYTHON_PATH%
  - set PATH=%PYTHON_PATH%;%PYTHON_PATH%\Scripts;%PATH%

  # Check that we have the expected version and architecture for Python
  - python --version

  # Install setuptools/wheel so that we can e.g. use bdist_wheel
  - pip install setuptools wheel

init:
  # Following the matrix here: https://wiki.python.org/moin/WindowsCompilers#Which_Microsoft_Visual_C.2B-.2B-_compiler_to_use_with_a_specific_Python_version_.3F
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="6" if "%Platform%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="6" if "%Platform%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="5" if "%Platform%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="5" if "%Platform%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="4" if "%Platform%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="4" if "%Platform%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" amd64
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="3" if "%Platform%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="3" if "%Platform%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" amd64
  - if "%PYTHON_MAJOR%"=="2" if "%PYTHON_MINOR%"=="7" if "%Platform%"=="x86" call "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\vcvarsall.bat" x86
  - if "%PYTHON_MAJOR%"=="2" if "%PYTHON_MINOR%"=="7" if "%Platform%"=="x64" call "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\vcvarsall.bat" amd64 
  - if "%PYTHON_MAJOR%"=="2" if "%PYTHON_MINOR%"=="6" if "%Platform%"=="x86" call "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\vcvarsall.bat" x86
  - if "%PYTHON_MAJOR%"=="2" if "%PYTHON_MINOR%"=="6" if "%Platform%"=="x64" call "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\vcvarsall.bat" amd64 

  # RDP session for debugging
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

build_script:
  - if "%PYTHON_MAJOR%"=="2" python setup.py build
  - if "%PYTHON_MAJOR%"=="3" python setup3.py build

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - if "%PYTHON_MAJOR%"=="2" python pywin32_testall.py

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - if "%PYTHON_MAJOR%"=="2" if "%PYTHON_MINOR%"=="7" python setup.py sdist
  - if "%PYTHON_MAJOR%"=="2" python setup.py bdist_wheel
  - if "%PYTHON_MAJOR%"=="2" python setup.py bdist_wininst
  - if "%PYTHON_MAJOR%"=="3" python setup3.py bdist_wheel
  - if "%PYTHON_MAJOR%"=="3" python setup3.py bdist_wininst

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

on_finish:
  # RDP session for debugging
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
